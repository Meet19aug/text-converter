{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","background","onChange","event","target","value","rows","newText","toUpperCase","showAlert","toLowerCase","arr","split","i","length","charAt","slice","join","document","getElementById","select","navigator","clipboard","writeText","filter","element","defaultProps","aboutText","Alert","height","alert","word","lower","capitalize","message","App","setMode","setAlert","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d13bca71.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n//rfc\r\nexport default function Navbar(props) {\r\n\r\n    \r\n    return (\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n              {/* <a className=\"nav-link\" href=\"#\">{props.aboutText}</a> */}\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n          </form> */}\r\n          <div className=\"form-check form-switch\">\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">Default switch checkbox input</label>\r\n          </div>\r\n        </div>\r\n        </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title : PropTypes.string,\r\n    // title: PropTypes.string.isRequired,\r\n    aboutText : PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : \"Page title here\",\r\n    aboutText : \"About Text here\"\r\n}\r\n\r\n\r\n","//rfc\r\nimport React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\");\r\n    // text = \"new Text\"; //wrong way to change the state\r\n    // setText(\"abxcdfe\"); //corect way to change the state\r\n    const handleUpClick = () => {\r\n        // console.log(\"Upper case was clicked...\" + text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase.\",\"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        // console.log(\"Upper case was clicked...\" + text);\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase.\",\"success\");\r\n\r\n    }\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"Handle On Change\");\r\n        setText(event.target.value);\r\n\r\n    }\r\n    const handleClear = () =>{\r\n        setText(\"\");\r\n        props.showAlert(\"Cleared Text.\",\"success\");\r\n\r\n    }\r\n    //capitalize text\r\n    const handleCapText = () => {\r\n        // console.log(\"Upper case was clicked...\" + text);\r\n        const arr = text.split(\" \");\r\n        for (let i = 0; i < arr.length; i++) {\r\n            arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1).toLowerCase();\r\n        }\r\n        let newText=arr.join(\" \");\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Capitalizecase.\",\"success\");\r\n\r\n    }\r\n    const handleCopy = () => {\r\n        // console.log(\"Handle On Change\");\r\n        let text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copy to clipboard.\",\"success\");\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"container my-3\" style={{color : props.mode==='dark'? 'white':'black'}}>\r\n            <div className=\"mb-3\">\r\n            <h1>{props.heading}</h1>\r\n            <textarea className=\"form-control\" style={{color : props.mode==='dark'? 'white':'black', background : props.mode==='dark'?'#0e3a5c':'white'}} onChange={handleOnChange} value={text} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert To UpperCase</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert To LowerCase</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleClear}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCapText}>Capitalize Text</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n\r\n        </div>\r\n        <div className=\"container my-3\" style={{color : props.mode==='dark'? 'white':'black'}}>\r\n            <h2>Text Summary:</h2>\r\n            <p>Your text contains { text.split(\" \").filter((element)=>{return element.length !== 0}).length } words and {text.length} characters.</p>\r\n            <p>Time required to read is {0.008*text.split(\" \").filter((element)=>{return element.length !== 0}).length} minutes.</p>\r\n            <h2>Preview </h2>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);;\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n         {   \r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.message}\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n//imrs\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes as Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n      setAlert({\n        message : message,\n        type : type,\n      })\n      setTimeout(() => {\n        setAlert(null);\n      }, 1500);\n  } \n  const toggleMode = () => {\n      if(mode === 'light'){\n        setMode('dark');\n        document.body.style.background='#042743';\n        showAlert(\"Dark Mode is enable.\",\"success\");\n        document.title = \"TextUtils - Dark Mode\";\n      }else{\n        setMode('light');\n        document.body.style.background=\"white\";\n        showAlert(\"Light Mode is enable.\",\"success\");\n        document.title =\"TextUtils - Light Mode\";\n      }\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\"  aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my\">\n    {/* <Switch> */}\n          {/*Old Syntax\n           <Route path=\"/about\">\n            <About mode={mode}/>\n          </Route>\n          <Route path=\"/\">\n            <TextForm heading=\"Enter below the text to analyze\" mode={mode} showAlert={showAlert}/>\n          </Route> */}\n          {/* <Route exact path='/about' element={<About mode={mode}/>} />\n          <Route exact path='/' element={<TextForm heading=\"Enter below the text to analyze\" mode={mode} showAlert={showAlert}/>} /> */}\n    {/* </Switch>  */}\n    <TextForm heading=\"Enter below the text to analyze\" mode={mode} showAlert={showAlert}/>\n    {/* <About mode={mode}/> */}\n    </div>\n    {/* </Router>  */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}